# Inspector Gadget OS Build Pipeline
# Phase 1: Foundation Setup - CI/CD Pipeline

name: Build Inspector Gadget OS

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Weekly builds for security updates (Sundays at 2 AM UTC)
    - cron: '0 2 * * 0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: inspector-gadget-os

jobs:
  # Test Phase: Run all component tests
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [o-llama, gadget-framework, web-ui]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        
    - name: Set up Node.js
      if: matrix.component == 'web-ui'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Run Go tests
      if: matrix.component != 'web-ui'
      working-directory: ${{ matrix.component }}
      run: |
        go mod tidy
        go test -v ./...
        go vet ./...
        
    - name: Run Node.js tests
      if: matrix.component == 'web-ui'
      working-directory: web-ui
      run: |
        npm ci --no-audit --no-fund
        npm run build
        npm run lint
        
  # Security Phase: Security scanning
  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  # Build Phase: Build all components
  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    strategy:
      matrix:
        variant: [appliance, development, server]
        arch: [amd64, arm64]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        
    - name: Build O-LLaMA
      working-directory: o-llama
      run: |
        go mod tidy
        CGO_ENABLED=0 GOOS=linux GOARCH=${{ matrix.arch }} go build -o ollama-server ./cmd/integrated-server
        
    - name: Build Gadget Framework
      working-directory: gadget-framework
      run: |
        go mod tidy
        CGO_ENABLED=0 GOOS=linux GOARCH=${{ matrix.arch }} go build -o go-go-gadget ./cmd/go-go-gadget
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Build Web UI
      working-directory: web-ui
      run: |
        npm ci --no-audit --no-fund
        npm run build
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=schedule,pattern=weekly-{{date 'YYYYMMDD'}}
        flavor: |
          suffix=-${{ matrix.variant }}-${{ matrix.arch }}
          
    - name: Build Inspector Gadget OS Image
      run: |
        mkdir -p build-context
        cp -r o-llama/ollama-server build-context/
        cp -r gadget-framework/go-go-gadget build-context/
        cp -r web-ui/dist build-context/web-ui
        cp -r os-core build-context/
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: build-context
        file: os-core/Dockerfile.alpine
        platforms: linux/${{ matrix.arch }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Release Phase: Create release artifacts
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Inspector Gadget OS ${{ github.ref }}
        body: |
          ## Inspector Gadget OS ${{ github.ref }}
          
          ### What's New
          - Enhanced Ollama with file system access and authentication
          - Improved gadget framework with new plugins
          - Updated web interface with better user experience
          - Security improvements and vulnerability fixes
          
          ### Download Options
          - **Appliance**: For dedicated AI hardware and home labs
          - **Development**: For AI researchers and developers
          - **Server**: For multi-user and enterprise environments
          
          ### Hardware Requirements
          - **CPU**: AMD Ryzen 5 or Intel i5 (8+ cores recommended)
          - **RAM**: 16-32GB DDR4/DDR5
          - **GPU**: NVIDIA RTX 4060+ or AMD RX 7600+ (16GB+ VRAM ideal)
          - **Storage**: 500GB+ NVMe SSD
          
          ### Installation
          ```bash
          # Flash to USB drive
          dd if=inspector-gadget-os-appliance-amd64.iso of=/dev/sdX bs=4M
          
          # Boot from USB and follow setup wizard
          ```
          
          ### Documentation
          - [Quick Start Guide](https://docs.inspector-gadget-os.dev/quickstart)
          - [Installation Guide](https://docs.inspector-gadget-os.dev/installation)  
          - [Gadget Development](https://docs.inspector-gadget-os.dev/development)
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v0.1.1...v0.1.2
        draft: false
        prerelease: false

  # Deployment Phase: Deploy to staging/production
  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Deploy to Staging
      run: |
        echo "ðŸš€ Deploying to staging environment"
        # Add staging deployment logic here
        
  deploy-production:
    runs-on: ubuntu-latest  
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    environment: production
    
    steps:
    - name: Deploy to Production
      run: |
        echo "ðŸš€ Deploying to production environment"
        # Add production deployment logic here